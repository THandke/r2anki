"<h4><strong>Treat <code>NA</code>â€™s as strings (<code>&quot;NA&quot;</code>).</strong></h4>","<pre><code>```r
stringr::str_replace_na(c(NA, NaN, factor(&quot;lalala&quot;), character(0)))
## [1] &quot;NA&quot;  &quot;NaN&quot; &quot;1&quot;
# note that the `c` function coerces the factor to its integer representation
#   ____________________________________________________________________________
base_replace_na &lt;- function(x) {ifelse(is.na(x), &quot;NA&quot;, x)}
base_replace_na(c(NA, NaN, factor(&quot;lalala&quot;), character(0)))
## [1] &quot;NA&quot;  &quot;NaN&quot; &quot;1&quot;
```</code></pre>
</div>
<div id=""count-the-number-of-letters-in-a-string."" class=""section level4"">
"
"<h4><strong>Count the number of letters in a string.</strong></h4>
","<pre><code>```r
stringr::str_length(c(&quot;four&quot;, NA, NaN, NULL, factor(&quot;lalala&quot;)))
## [1]  4 NA  3  1
#   ____________________________________________________________________________
nchar(c(&quot;four&quot;, NA, NaN, NULL, factor(&quot;lalala&quot;)))
## [1]  4 NA  3  1
```</code></pre>
</div>
<div id=""return-the-last-letter-of-a-string-subset-a-string."" class=""section level4"">
"
"<h4><strong>Return the last letter of a string, subset a string.</strong></h4>
","<pre><code>```r
stringr::str_sub(c(&quot;five&quot;, &quot;six&quot;), -1)
## [1] &quot;e&quot; &quot;x&quot;
#   ____________________________________________________________________________
substr(c(&quot;five&quot;, &quot;six&quot;), 
       start = nchar(c(&quot;five&quot;, &quot;six&quot;)), 
       stop = nchar(c(&quot;five&quot;, &quot;six&quot;)))
## [1] &quot;e&quot; &quot;x&quot;
```</code></pre>
</div>
<div id=""repeatreplicateduplicate-a-string-several-times."" class=""section level4"">
"
"<h4><strong>Repeat/replicate/duplicate a string several times.</strong></h4>
","<pre><code>```r
stringr::str_dup(&quot;_a_&quot;, 5)
## [1] &quot;_a__a__a__a__a_&quot;
#   ____________________________________________________________________________
paste(rep(&quot;_a_&quot;, 5), collapse = &quot;&quot;)
## [1] &quot;_a__a__a__a__a_&quot;
```</code></pre>
</div>
<div id=""removetrim-spaces-at-the-beginning-leading-andor-end-trailing-of-a-string."" class=""section level4"">
"
"<h4><strong>Remove/trim spaces at the beginning (leading) and/or end (trailing) of a string.</strong></h4>
","<pre><code>```r
stringr::str_trim(c(&quot;  2left_1right &quot;, &quot;   &quot;), side = c(&quot;left&quot;))
## [1] &quot;2left_1right &quot; &quot;&quot;
#   ____________________________________________________________________________
# ^\\s+|\\s+$ is the regex for one or more spaces in the beginning
# or one or more spaces at the end
gsub(&quot;^\\s+&quot;, &quot;&quot;, c(&quot;  2left_1right &quot;, &quot;   &quot;))
## [1] &quot;2left_1right &quot; &quot;&quot;
```</code></pre>
</div>
<div id=""fillpad-spaces-or-other-characters-before-andor-after-a-string."" class=""section level4"">
"
